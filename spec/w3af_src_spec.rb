# -*- coding: utf-8 -*-

require_relative 'spec_helper'

describe 'pentester::w3af_src' do
  let(:subject) do
    ChefSpec::SoloRunner.new.converge(described_recipe)
  end

  ['libxml2-dev', 'libxslt1-dev', 'python-dev'].each do |p|
    it "installs package[#{p}]" do
      expect(subject).to install_package(p)
    end
  end

  it 'syncs git[/opt/w3af]' do
    expect(subject).to sync_git('/opt/w3af')
      .with(repository: 'https://github.com/andresriancho/w3af.git',
            reference: 'master')
  end

  it 'installs python_runtime[2]' do
    expect(subject).to install_python_runtime('2')
  end

  it 'creates python_virtualenv[w3af-venv]' do
    expect(subject).to create_python_virtualenv('w3af-venv')
      .with(path: '/opt/w3af/venv')
  end

  ['pyClamd', 'pybloomfiltermmap', 'pyOpenSSL', 'pyasn1', 'lxml',
   'vulndb', 'psutil', 'mitmproxy', 'ruamel.ordereddict', 'Flask',
   'PyGithub', 'GitPython', 'esmre', 'phply', 'nltk', 'chardet',
   'tblib', 'pdfminer', 'futures', 'ndg-httpsclient', 'guess-language',
   'cluster', 'msgpack-python', 'python-ntlm', 'halberd', 'darts.util.lru',
   'Jinja2', 'scapy-real', 'markdown', 'PyYAML'].each do |p|
    it "installs python_package[#{p}]" do
      expect(subject).to install_python_package(p)
    end
  end
end
