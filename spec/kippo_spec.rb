# -*- coding: utf-8 -*-

require_relative 'spec_helper'

describe 'pentester::kippo' do
  let(:subject) do
    ChefSpec::SoloRunner.new do |node|
      node.override['pentester']['kippo']['users'] = ['root:0:123456', 'sliim:1000:sliim_pass']
      node.override['pentester']['kippo']['txtcmds'] = { 'usr/bin/w' => 'sliim    pts/1337' }
      node.override['pentester']['kippo']['config']['database']['textlog']['logfile'] = 'kippo-textlog.log'
    end.converge(described_recipe)
  end

  it 'includes recipe[git]' do
    expect(subject).to include_recipe('git')
  end

  it 'installs python_runtime[2]' do
    expect(subject).to install_python_runtime('2')
  end

  it 'installs python_package[kippo-twisted]' do
    expect(subject).to install_python_package('kippo-twisted')
      .with(package_name: 'twisted',
            version: '15.1.0')
  end

  it 'installs python_package[kippo-pyasn1-pycrypto]' do
    expect(subject).to install_python_package('kippo-pyasn1-pycrypto')
      .with(package_name: %w(pyasn1 pycrypto))
  end

  it 'sync git[/opt/kippo]' do
    expect(subject).to sync_git('/opt/kippo')
      .with(repository: 'https://github.com/desaster/kippo',
            reference: 'master')
  end

  it 'creates template[/opt/kippo/kippo.cfg]' do
    config_file = '/opt/kippo/kippo.cfg'
    expect(subject).to create_template(config_file)
      .with(owner: 'root',
            group: 'root',
            source: 'kippo.cfg.erb',
            mode: '0644')

    [/ssh_addr = 0.0.0.0$/,
     /ssh_port = 2222$/,
     /hostname = svr03$/,
     %r{rsa_public_key = data/ssh_host_rsa_key.pub$},
     /^\[database_textlog\]$/,
     /^logfile = kippo-textlog.log$/].each do |m|
      expect(subject).to render_file(config_file).with_content(m)
    end
  end

  it 'creates file[/opt/kippo/data/userdb.txt]' do
    config_file = '/opt/kippo/data/userdb.txt'
    expect(subject).to create_file(config_file)
      .with(owner: 'root',
            group: 'root',
            mode: '0644')

    [/^root:0:123456$/,
     /sliim:1000:sliim_pass$/].each do |m|
      expect(subject).to render_file(config_file).with_content(m)
    end
  end

  it 'creates directory[/opt/kippo/txtcmds/usr/bin]' do
    expect(subject).to create_directory('/opt/kippo/txtcmds/usr/bin')
      .with(recursive: true)
  end

  it 'creates file[/opt/kippo/txtcmds/usr/bin/w]' do
    expect(subject).to create_file('/opt/kippo/txtcmds/usr/bin/w')
      .with(owner: 'root',
            group: 'root',
            mode: '0644',
            content: 'sliim    pts/1337')
  end
end
