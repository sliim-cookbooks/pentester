# -*- coding: utf-8 -*-

require_relative 'spec_helper'

describe 'pentester::msf_user_config' do
  let(:subject) do
    ChefSpec::SoloRunner.new(platform: 'debian',
                             version: '8.0') do |node|
      node.override['pentester']['msf']['config']['framework/core']['PromptChar'] = '>>'
      node.override['pentester']['msf']['msfconsole.rc'] = ['load sounds']
    end.converge(described_recipe)
  end

  it 'creates directory[/root/.msf4]' do
    expect(subject).to create_directory('/root/.msf4')
      .with(owner: 'root',
            group: 'root')
  end

  it 'creates template[/root/.msf4/config]' do
    expect(subject).to create_template('/root/.msf4/config')
      .with(owner: 'root',
            group: 'root',
            source: 'msf/config.erb')
  end

  it 'creates template[/root/.msf4/msfconsole.rc]' do
    expect(subject).to create_template('/root/.msf4/msfconsole.rc')
      .with(owner: 'root',
            group: 'root',
            source: 'msf/msfconsole.rc.erb')
  end

  it 'does not sync git[/root/.msf4]' do
    expect(subject).to_not sync_git('/root/.msf4')
  end

  context 'with msf4' do
    let(:subject) do
      ChefSpec::SoloRunner.new(platform: 'debian',
                               version: '8.0') do |node|
        node.override['pentester']['msf4']['git_repository'] = 'https://server/repo.git'
        node.override['pentester']['msf4']['git_reference'] = 'master'
      end.converge(described_recipe)
    end

    it 'does not create directory[/root/.msf4]' do
      expect(subject).to_not create_directory('/root/.msf4')
    end

    it 'syncs git[/root/.msf4]' do
      expect(subject).to sync_git('/root/.msf4')
        .with(user: 'root',
              group: 'root',
              repository: 'https://server/repo.git',
              reference: 'master')
    end
  end
end
