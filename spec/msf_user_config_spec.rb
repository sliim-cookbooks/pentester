# -*- coding: utf-8 -*-

require_relative 'spec_helper'

describe 'pentester::msf_user_config' do
  subject { ChefSpec::SoloRunner.new.converge(described_recipe) }

  let(:subject) do
    ChefSpec::SoloRunner.new do |node|
      node.set['pentester']['msf']['config'] = {
        'framework/core' => {
          'PromptChar' => '>>'
        }
      }
      node.set['pentester']['msf']['msfconsole.rc'] = ['load sounds']
    end.converge(described_recipe)
  end

  it 'creates directory[/root/.msf4]' do
    expect(subject).to create_directory('/root/.msf4')
  end

  it 'creates template[/root/.msf4/config]' do
    expect(subject).to create_template('/root/.msf4/config')
      .with(owner: 'root',
            group: 'root',
            source: 'msf/config.erb')
  end

  it 'creates template[/root/.msf4/msfconsole.rc]' do
    expect(subject).to create_template('/root/.msf4/msfconsole.rc')
      .with(owner: 'root',
            group: 'root',
            source: 'msf/msfconsole.rc.erb')
  end
end
